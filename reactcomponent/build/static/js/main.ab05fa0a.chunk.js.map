{"version":3,"sources":["config/Fetch/index.jsx","config/ConstUrl/index.jsx","page/GitHot/GitItem/index.jsx","page/GitHot/index.jsx","page/MainTab/index.jsx","page/BattleResult/index.jsx","config/RouterConfig/index.jsx","page/Battle/index.jsx","components/Header/index.jsx","page/Main/index.jsx","serviceWorker.js","index.js"],"names":["Request","get","target","axios","method","url","headers","CONSTURL","ALL","JAVASCRIPT","RUBY","JAVA","CSS","GitItem","props","state","name","stargazersCount","forksCount","openIssuesCount","htmlUrl","avatar","order","obj1","obj2","this","pStyle","display","marginBottom","fontSize","textAlign","color","fontWeight","groupInfoStyle","position","width","padding","overflow","textOverflow","content","style","minWidth","testAlign","textDecoration","href","rel","height","src","alt","paddingLeft","marginRight","icon","faUser","Object","assign","faStar","faCodeBranch","faExclamationTriangle","undefined","faSpinner","Component","GitHot","allList","flag","loading","length","setState","then","res","data","items","number_format","num","toString","replace","m","flexWrap","justifyContent","alignItems","fontSWeight","spin","size","map","item","index","key","id","stargazers_count","forks_count","open_issues_count","html_url","owner","avatar_url","TabPane","Tabs","BattleResult","RouterConfig","path","exact","component","defaultActiveKey","tab","routes","to","Header","useEffect","window","addEventListener","addScrollEvent","removeEventListener","headerDiv","document","getElementById","getBoundingClientRect","pageYOffset","classList","contains","add","remove","xs","sm","md","lg","xl","xxl","className","mode","Item","Main","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab05fa0a.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst rootUrl = 'https://api.github.com/search/repositories?';\r\nconst Request={\r\n    \"get\":\"\"\r\n}\r\nRequest.get = (target)=>{\r\n    return axios({\r\n        method: \"get\",\r\n        url: rootUrl + target,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n}\r\nexport default Request;","const CONSTURL = {\r\n    ALL: \"q=stars:%3E11&sort=stars&order=desc&type=Repositories\",\r\n    JAVASCRIPT: \"q=stars:%3E11+language:javascript&sort=stars&order=desc&type=Repositories\",\r\n    RUBY: \"q=stars:%3E1+language:ruby&sort=stars&order=desc&type=Repositories\",\r\n    JAVA: \"q=stars:%3E11+language:java&sort=stars&order=desc&type=Repositories\",\r\n    CSS: \"q=stars:%3E11+language:css&sort=stars&order=desc&type=Repositories\"\r\n}\r\n\r\nexport default CONSTURL;","import React, { Component, Fragment } from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCodeBranch, faExclamationTriangle, faUser, faStar } from '@fortawesome/fontawesome-free-solid';\r\nclass GitItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            name: props.name,\r\n            stargazersCount: props.stargazersCount,\r\n            forksCount: props.forksCount,\r\n            openIssuesCount : props.openIssuesCount,\r\n            htmlUrl: props.htmlUrl,\r\n            avatar: props.avatar,\r\n            order: props.order\r\n        }\r\n    }  \r\n   \r\n    render() { \r\n        const { name, stargazersCount, forksCount, openIssuesCount, htmlUrl, avatar, order } = this.state;\r\n        const mainDivStyle = {\r\n            position: \"relative\", \r\n            display: \"inline-block\",\r\n            minWidth: \"260px\",\r\n            width: \"calc(25% - 60px)\",\r\n            padding: \"5px 10px\",\r\n            testAlign: 'center',\r\n            marginBottom: '45px'\r\n        }\r\n        const pStyle = {\r\n            display: \"inline-block\",\r\n            marginBottom: \"0px\",\r\n            fontSize: \"14px\",\r\n            textAlign: \"left\",\r\n            color: \"black\",\r\n            fontWeight: \"normal\"\r\n        }\r\n        const orderPStyle = {\r\n            display: \"block\",\r\n            marginBottom: \"5px\",\r\n            fontSize: \"36px\",\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontWeight: \"bold\"\r\n        }\r\n        const firstIconStyle = {\r\n            display: \"inline-block\",\r\n            fontSize: \"14px\",\r\n            color : '#FFBF6D',\r\n            marginRight: \"5px\",\r\n            width: '14px',\r\n            height: '14px'\r\n        }\r\n        const secondIconStyle = {\r\n            display: \"inline-block\",\r\n            fontSize: \"14px\",\r\n            color : '#FFD900',\r\n            marginRight: \"5px\",\r\n            width: '14px',\r\n            height: '14px',\r\n            fontWeight: 'normal'\r\n        }\r\n        const thirdIconStyle = {\r\n            display: \"inline-block\",\r\n            fontSize: \"14px\",\r\n            color : '#7AC2F7',\r\n            marginRight: \"5px\",\r\n            width: '14px',\r\n            height: '14px',\r\n            fontWeight: 'normal'\r\n        }\r\n        const forthIconStyle = {\r\n            display: \"inline-block\",\r\n            fontSize: \"14px\",\r\n            color : '#F28690',\r\n            marginRight: \"5px\",\r\n            width: '14px',\r\n            height: '14px',\r\n            fontWeight: 'normal'\r\n        }\r\n        const aStyle = {\r\n            textDecoration: 'none',\r\n            color: 'black'\r\n        }\r\n        const titlePStyle = {\r\n            color : '#BB2B14',\r\n            fontSize : '16px',\r\n            fontWeight : 'bold',\r\n            textAlign : 'center',\r\n            display: 'block'\r\n        }\r\n        const groupWrapStyle = {\r\n            position: 'realative',\r\n            width: '100%',\r\n            testAlign: \"center\",\r\n            paddingLeft: '55px'\r\n        }\r\n        const groupInfoStyle = {\r\n            position: 'relative',\r\n            width: 'auto',\r\n            display: 'block',\r\n            padding: '5px 0px',\r\n            color: 'black',\r\n            fontSize: '12px',\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\"\r\n        }\r\n        \r\n        const assignO = (obj1, obj2)=>{\r\n            let obj3 = {};\r\n            return Object.assign(obj3, obj1, obj2);\r\n        }\r\n\r\n        \r\n\r\n        const content = (\r\n            <div style = { mainDivStyle }>\r\n                <a style = { aStyle } href={ htmlUrl } rel=\"noopener noreferrer\" target = \"_blank\">\r\n                    <p style = { orderPStyle }>{ `#${order}` }</p>\r\n                    <LazyLoad height={ 180 }>\r\n                        <img style = {{ position: 'relative',height: 120, width: 120, display: \"block\" }} src={ avatar } alt={ avatar }/> \r\n                    </LazyLoad>\r\n                    <p style = { titlePStyle } >{ name }</p>\r\n                    <div style = { groupWrapStyle }>\r\n                        <div style = { groupInfoStyle }>\r\n                            <p style = { pStyle }>\r\n                                <FontAwesomeIcon style = { firstIconStyle } icon = { faUser }/>\r\n                            </p>\r\n                            <p style = { assignO(pStyle, { fontWeight: 'bold' }) }>{ name }</p>\r\n                        </div>\r\n                        <div style = { groupInfoStyle }>\r\n                            <p style = { pStyle } >\r\n                                <FontAwesomeIcon style = { secondIconStyle } icon = { faStar }/>\r\n                            </p>\r\n                            <p style = { pStyle } >{ `${stargazersCount} starts` }</p>\r\n                        </div>\r\n                        <div style = { groupInfoStyle }>\r\n                            <p style = { pStyle } >\r\n                                <FontAwesomeIcon style = { thirdIconStyle } icon = { faCodeBranch } />\r\n                            </p>\r\n                            <p style = { pStyle } >{ `${forksCount} forks` }</p>\r\n                        </div>\r\n                        <div style = { groupInfoStyle }>\r\n                            <p style = { pStyle } >\r\n                                <FontAwesomeIcon style = { forthIconStyle } icon = { faExclamationTriangle } />\r\n                            </p>\r\n                            <p style = { pStyle } >{ `${openIssuesCount} issues` }</p>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div> \r\n        )\r\n        return ( \r\n            <Fragment>\r\n                { \r\n                    (name !== undefined && name) \r\n                    ? content \r\n                    : <FontAwesomeIcon icon = { faSpinner } /> \r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default GitItem;","import React, { Component } from 'react';\r\nimport Request from '@/config/Fetch';\r\nimport CONSTURL from '@/config/ConstUrl';\r\nimport GitItem from './GitItem';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/fontawesome-free-solid';\r\nclass GitHot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            allList: [],\r\n            flag: false,\r\n            target: props.target,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        let { allList, target } = this.state;\r\n        if( target ) {\r\n            switch(target) {\r\n                case 'ALL' : target = CONSTURL.ALL; break;\r\n                case 'JAVASCRIPT' : target = CONSTURL.JAVASCRIPT; break;\r\n                case 'RUBY' : target = CONSTURL.RUBY; break;\r\n                case 'JAVA' : target = CONSTURL.JAVA; break;\r\n                case 'CSS' : target = CONSTURL.CSS; break;\r\n                default : target = CONSTURL.ALL\r\n            }\r\n        } else {\r\n            target = CONSTURL.ALL;\r\n        }\r\n        if(!allList || allList.length === 0) {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            await Request.get(target)\r\n            .then((res)=>{\r\n                this.setState({\r\n                    allList: res.data.items,\r\n                    loading: false\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { allList, loading } = this.state;\r\n        const number_format = (num) => {\r\n            return num && num\r\n            .toString()\r\n            .replace(/(^|\\s)\\d+/g, (m) => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\r\n        }\r\n        const mainDivStyle = {\r\n            position: \"relative\", \r\n            width: \"100%\", \r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            padding: \"0px 30px\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }\r\n        const iconStyle = {\r\n            position: \"relative\",\r\n            fontSWeight: \"bold\",\r\n            color: 'gray'\r\n        }\r\n        return ( \r\n            <div style = { mainDivStyle }>\r\n                {\r\n                    loading &&  <FontAwesomeIcon icon = { faSpinner } style = { iconStyle } spin size=\"4x\"/>\r\n                }\r\n                {\r\n                    allList.length !== 0 &&  allList.map((item, index)=>{\r\n                        return <GitItem \r\n                                    order = { index + 1 }\r\n                                    key = { item.id } \r\n                                    name = { item.name } \r\n                                    stargazersCount = {number_format(item.stargazers_count) } \r\n                                    forksCount = { number_format(item.forks_count)  } \r\n                                    openIssuesCount = { number_format(item.open_issues_count)  } \r\n                                    htmlUrl = { item.html_url } \r\n                                    avatar = { item.owner.avatar_url }\r\n                                />;\r\n                    })\r\n                }\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default GitHot;\r\n","import React, { Component } from 'react';\r\nimport { Tabs } from 'antd';\r\n\r\nimport GitHot from '../GitHot';\r\nconst { TabPane } = Tabs;\r\nclass MainTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab={ <span>ALL</span> } key=\"1\" >\r\n                        <GitHot target=\"ALL\"/>\r\n                    </TabPane>\r\n                    <TabPane tab={ <span>JAVASCRIPT</span> } key=\"2\" >\r\n                        <GitHot target=\"JAVASCRIPT\"/>\r\n                    </TabPane>\r\n                    <TabPane tab={ <span>RUBY</span> } key=\"3\" >\r\n                        <GitHot target=\"RUBY\"/>\r\n                    </TabPane>\r\n                    <TabPane tab={ <span>JAVA</span> } key=\"4\" >\r\n                        <GitHot target=\"JAVA\"/>\r\n                    </TabPane>\r\n                    <TabPane tab={ <span>CSS</span> } key=\"5\" >\r\n                        <GitHot target=\"CSS\"/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default MainTab;","import React from 'react';\r\nfunction BattleResult() {\r\n    const style = {\r\n        fontWeight: 'bolder',\r\n        fontSize: '28px'\r\n    }\r\n    return (\r\n        <div style = {{ padding: '5px 20px' }}>\r\n            <p style = { style }>BattleResult page</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BattleResult;","import MainTab from '../../page/MainTab';\r\nimport Battle from '../../page/Battle';\r\nimport BattleResult from '../../page/BattleResult';\r\nexport const RouterConfig = [\r\n    { path: '/', exact: true, component: MainTab },\r\n    {\r\n        path: '/battle', \r\n        exact: false,\r\n        routes: [\r\n            { \r\n                path: '/battle', \r\n                exact: false, \r\n                component: Battle\r\n            },\r\n            { \r\n                path: '/battle/result', \r\n                exact: true, \r\n                component: BattleResult\r\n            }\r\n        ]\r\n    },\r\n];\r\nexport default RouterConfig;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Battle() {\r\n    const style = {\r\n        fontWeight: 'bolder',\r\n        fontSize: '28px'\r\n    }\r\n    return (\r\n        <div style = {{ padding: '5px 20px' }}>\r\n            <p style = { style }>Battle page</p>\r\n            <Link \r\n                to = \"/battle/result\"\r\n            >To Battle Result</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Battle;","import React, { useEffect } from 'react';\r\nimport { Menu, Col } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss';\r\nconst Header = () => {\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\", ()=>{ addScrollEvent() });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\", ()=>{ addScrollEvent() });\r\n        }\r\n    })\r\n\r\n    const addScrollEvent = ()=>{\r\n        let headerDiv = document.getElementById('header-main-div');\r\n        let height = headerDiv.getBoundingClientRect().height;\r\n        if( window.pageYOffset - height > 40 ) {\r\n            if (!headerDiv.classList.contains(\"sticky\")) {\r\n                headerDiv.classList.add(\"sticky\");\r\n            } \r\n        } else {\r\n            if (headerDiv.classList.contains(\"sticky\")) {\r\n                headerDiv.classList.remove(\"sticky\");\r\n            }   \r\n        }\r\n    }\r\n\r\n    const menuContent = ( style ) => (\r\n        <Menu mode = { style } className = \"header-menu\">\r\n            <Menu.Item className=\"sl-menu-item\">\r\n                <Link to=\"/\">GTIHOT</Link>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"sl-menu-item\">\r\n                <Link to=\"/battle\">BATTLE</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div id = \"header-main-div\">\r\n            <Col xs = { 0 } sm = { 24 } md = { 24 } lg = { 24 } xl = { 24 } xxl = { 24 }>\r\n                <Link \r\n                    to = \"/\" \r\n                    style = {{position: \"relative\", width: \"100%\", display: \"inline-block\"}}\r\n                >\r\n                    <p className = \"header-img\">GTIHOT</p>\r\n                    { menuContent(\"horizontal\") }\r\n                </Link>\r\n            </Col>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Route , HashRouter} from 'react-router-dom';\r\nimport { BackTop } from 'antd';\r\nimport RouterConfig from '../../config/RouterConfig';\r\nimport Header from '../../components/Header';\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <HashRouter>\r\n                <Header />\r\n                {\r\n                    RouterConfig.map((item, index)=>{\r\n                        if(item.component) {\r\n                            return <Route key={ index } path = { item.path } exact={item.exact} component = { item.component } />\r\n                        } else if(item.routes){\r\n                            return item.routes.map((item, index) => {\r\n                                return <Route key={ index+1 } path = { item.path } exact={item.exact} component = { item.component } />\r\n                            })\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                }\r\n                <BackTop />\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './page/Main';\nimport './style/global.scss';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <Main/>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}